package rox.warpstone;

import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumChatFormatting;
import net.minecraft.util.EnumFacing;
import net.minecraft.world.World;

public class ItemWarpStone extends Item{
	//Blank item
	public static Item warp_stone;
	
	//Called in Core to initialize the item. Rendering is handled in ClientProxy.
	public static void init(){
		//Tells the blank item to pull code from this class.
		warp_stone = new ItemWarpStone()
			//Some settings for the item.
			
			//The name of the item when referred to by commands and the .lang file.
			.setUnlocalizedName("warp_stone")
			//Stack size, this item will take damage as it's used, so keep this at 1.
			.setMaxStackSize(1)
			//The max amount of damage the item can take.
			//The amount of times an item can be used is always 1 more than is set.
			.setMaxDamage(31)
			//Assigns a creative tab. Since this mod only has one item, I'm assigning
			//it to a vanilla tab; Tools.
			.setCreativeTab(CreativeTabs.tabTools);
	}
	
	@Override
	public boolean onItemUse(ItemStack stack, EntityPlayer player, World world, BlockPos pos, EnumFacing side, float hitX, float hitY, float hitZ){
		//Only bind if the player is sneaking.
		if(player.isSneaking()){
			//Create the tag if it doesn't exist.
			if(stack.getTagCompound() == null){
				stack.setTagCompound(new NBTTagCompound());
			}
			
			//Stores the dimension ID, X, Y and Z coordinates to the tag.
			NBTTagCompound nbt = new NBTTagCompound();
			nbt.setInteger("dim", player.dimension);
			nbt.setInteger("x", pos.getX());
			nbt.setInteger("y", pos.getY());
			nbt.setInteger("z", pos.getZ());
			//Assigns the tag to the item.
			stack.getTagCompound().setTag("coords", nbt);
			
			//Tells the player that the warp stone was bound successfully.
			Methods.tellPlayer(player, (EnumChatFormatting.GREEN + "Location marked!"));
		}
		
		return false;
	}
	
	@Override
	public ItemStack onItemRightClick(ItemStack stack, World world, EntityPlayer player){
		//Make sure the player isn't sneaking so that they don't teleport when they want to bind the stone.
		if(!player.isSneaking()){
			
		}
		return stack;
	}
}
